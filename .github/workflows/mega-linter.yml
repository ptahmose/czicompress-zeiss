---
# MegaLinter GitHub Action configuration file
# More info at https://megalinter.io
name: MegaLinter

on:
  push:
    branches: ["main"]  # run only when merge with main branch
  pull_request:
    branches: ["main"]  # run only when merge with main branch
  workflow_dispatch: {}

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: MegaLinter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Use CMake to configure code
        working-directory: czicompress
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      # MegaLinter
      - name: MegaLinter
        id: ml
        # You can override MegaLinter flavor used to have faster performances
        # More info at https://megalinter.io/flavors/
        uses: oxsecurity/megalinter/flavors/dotnet@v8
        env:
          # All available variables are described in documentation
          # https://megalinter.io/configuration/
          VALIDATE_ALL_CODEBASE: true
          # I needed to exclude capi.cpp, the linter was complaining about it and I was not able to
          # fix it.
          # TODO: I guess we should first run cmake to configure the project, and the run the linters
          #       (with the configuration file generated by cmake).
          FILTER_REGEX_EXCLUDE: ^.*[/\\]_deps/
          CPP_CPPCHECK_ARGUMENTS: >
            --language=c++
            --std=c++17
            --project=czicompress/build/compile_commands.json 

      # Upload MegaLinter artifacts
      - name: Archive production artifacts
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
